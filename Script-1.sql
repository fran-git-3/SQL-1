--1 .Devuelve todas las películas
SELECT * FROM MOVIES
--2. Devuelve todos los géneros existentes
SELECT * FROM GENDERS
--3. Devuelve la lista de todos los estudios de grabación que estén activos
SELECT * FROM STUDIOS WHERE STUDIO_ACTIVE=1
--4. Devuelve una lista de los 20 últimos miembros en anotarse al videoclub
SELECT * FROM MEMBERS ORDER BY MEMBER_DISCHARGE_DATE DESC LIMIT 20

--5. Devuelve las 20 duraciones de películas más frecuentes, ordenados de mayor a menor.
SELECT MOVIE_DURATION, COUNT(*) AS FRECUENCIA FROM MOVIES GROUP BY MOVIE_DURATION ORDER BY FRECUENCIA DESC LIMIT 20
--6. Devuelve las películas del año 2000 en adelante que empiecen por la letra A.
SELECT * FROM MOVIES WHERE MOVIE_NAME LIKE 'A%' AND MOVIE_LAUNCH_DATE >= '2000-01-01'
--7. Devuelve los actores nacidos un mes de Junio
SELECT *  FROM ACTORS WHERE MONTH (ACTOR_BIRTH_DATE) = 06 
--8. Devuelve los actores nacidos cualquier mes que no sea Junio y que sigan vivos.
SELECT *  FROM ACTORS WHERE MONTH (ACTOR_BIRTH_DATE) <> 06 AND ACTOR_DEAD_DATE IS NULL
--9. Devuelve el nombre y la edad de todos los directores menores o iguales de 50 años que estén vivos
SELECT * FROM DIRECTORS
SELECT DIRECTOR_NAME, EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM DIRECTOR_BIRTH_DATE) AS edad 
FROM DIRECTORS WHERE (EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM DIRECTOR_BIRTH_DATE)) <= 50 AND DIRECTOR_DEAD_DATE IS NULL
--10. Devuelve el nombre y la edad de todos los actores menores de 50 años que hayan fallecido
SELECT ACTOR_NAME, (YEAR(ACTOR_DEAD_DATE) - YEAR(ACTOR_BIRTH_DATE)) AS edad FROM ACTORS
WHERE ACTOR_DEAD_DATE IS NOT NULL AND (YEAR(ACTOR_DEAD_DATE) - YEAR(ACTOR_BIRTH_DATE)) < 50
--11. Devuelve el nombre de todos los directores menores o iguales de 40 años que estén vivos
SELECT DIRECTOR_NAME FROM DIRECTORS
WHERE (EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM DIRECTOR_BIRTH_DATE)) <= 40 AND DIRECTOR_DEAD_DATE IS NULL
--12. Indica la edad media de los directores vivos
SELECT AVG(YEAR(CURDATE()) - YEAR(DIRECTOR_BIRTH_DATE)) AS EDAD_MEDIA
FROM DIRECTORS
WHERE  DIRECTOR_DEAD_DATE IS NULL
--13. Indica la edad media de los actores que han fallecido
SELECT AVG(YEAR(CURDATE()) - YEAR(ACTOR_BIRTH_DATE)) AS EDAD_MEDIA
FROM ACTORS
WHERE  ACTOR_DEAD_DATE IS NOT NULL

--14. Devuelve el nombre de todas las películas y el nombre del estudio que las ha realizado

SELECT MOVIE_NAME AS NOMBRE_PELICULA , STUDIO_NAME AS NOMBRE_ESTUDIO
FROM MOVIES JOIN STUDIOS ON MOVIES.STUDIO_ID = STUDIOS.STUDIO_ID
--15. Devuelve los miembros que alquilaron al menos una película entre el año 2010 y el 2015

SELECT DISTINCT MEMBERS.MEMBER_NAME
FROM MEMBERS
JOIN MEMBERS_MOVIE_RENTAL ON MEMBERS.MEMBER_ID = MEMBERS_MOVIE_RENTAL.MEMBER_ID
WHERE MEMBERS_MOVIE_RENTAL.MEMBER_RENTAL_DATE BETWEEN '2010-01-01' AND '2015-12-31'


--16. Devuelve cuantas películas hay de cada país
SELECT NATIONALITIES.NATIONALITY_NAME AS PAIS, COUNT(MOVIES.MOVIE_ID) AS PELICULAS
FROM NATIONALITIES
JOIN MOVIES ON NATIONALITIES.NATIONALITY_ID = MOVIES.NATIONALITY_ID
GROUP BY NATIONALITIES.NATIONALITY_NAME


--17. Devuelve todas las películas que hay de género documental

SELECT MOVIE_NAME
FROM MOVIES
JOIN GENRES ON MOVIES.GENRE_ID = GENRES.GENRE_ID
WHERE GENRES.GENRE_NAME = 'Documentary'

--18. Devuelve todas las películas creadas por directores nacidos a partir de 1980 y que todavía están vivos

SELECT MOVIE_NAME
FROM MOVIES
JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID
WHERE DIRECTORS.DIRECTOR_BIRTH_DATE >= '1980-01-01' AND DIRECTORS.DIRECTOR_DEAD_DATE IS NULL;

--19. Indica si hay alguna coincidencia de nacimiento de ciudad (y si las hay, indicarlas) entre los miembros del videoclub y los directores.
SELECT MEMBERS.MEMBER_NAME AS MIEMBRO, DIRECTORS.DIRECTOR_NAME AS DIRECTOR, MEMBERS.MEMBER_TOWN
FROM MEMBERS
JOIN DIRECTORS ON MEMBERS.MEMBER_TOWN = DIRECTORS.DIRECTOR_BIRTH_PLACE;


--20. Devuelve el nombre y el año de todas las películas que han sido producidas por un estudio que actualmente no esté activo
SELECT MOVIES.MOVIE_NAME AS NOMBRE_PELICULA, MOVIES.MOVIE_LAUNCH_DATE AS FECHA
FROM MOVIES
JOIN STUDIOS ON MOVIES.STUDIO_ID = STUDIOS.STUDIO_ID
WHERE STUDIOS.STUDIO_ACTIVE = 0

--21. Devuelve una lista de las últimas 10 películas que se han alquilado
SELECT MOVIES.MOVIE_NAME AS PELICULA, MEMBERS_MOVIE_RENTAL.MEMBER_RENTAL_DATE
FROM MOVIES
JOIN MEMBERS_MOVIE_RENTAL ON MOVIES.MOVIE_ID = MEMBERS_MOVIE_RENTAL.MOVIE_ID
ORDER BY MEMBERS_MOVIE_RENTAL.MEMBER_RENTAL_DATE DESC
LIMIT 10

--22. Indica cuántas películas ha realizado cada director antes de cumplir 41 años

SELECT DIRECTORS.DIRECTOR_NAME AS DIRECTOR, COUNT(MOVIES.MOVIE_ID) AS PELICULAS
FROM DIRECTORS
JOIN MOVIES ON DIRECTORS.DIRECTOR_ID = MOVIES.DIRECTOR_ID
WHERE YEAR(MOVIES.MOVIE_LAUNCH_DATE) < YEAR(DIRECTORS.DIRECTOR_BIRTH_DATE) + 41
GROUP BY DIRECTORS.DIRECTOR_NAME

--23. Indica cuál es la media de duración de las películas de cada director
SELECT DIRECTORS.DIRECTOR_NAME AS DIRECTOR, AVG(MOVIES.MOVIE_DURATION) AS DURACION_MEDIA
FROM DIRECTORS
JOIN MOVIES ON DIRECTORS.DIRECTOR_ID = MOVIES.DIRECTOR_ID
GROUP BY DIRECTORS.DIRECTOR_NAME

--24. Indica cuál es el nombre y la duración mínima de la película que ha sido alquilada en los últimos 2 años por los miembros del videoclub (La "fecha de ejecución" en este script es el 25-01-2019)
SELECT MOVIES.MOVIE_NAME AS PELICULA, MIN(MOVIES.MOVIE_DURATION) AS DURACION_MINIMA
FROM MOVIES
JOIN MEMBERS_MOVIE_RENTAL ON MOVIES.MOVIE_ID = MEMBERS_MOVIE_RENTAL.MOVIE_ID
WHERE MEMBERS_MOVIE_RENTAL.MEMBER_RENTAL_DATE BETWEEN '2017-01-25' AND '2019-01-25'
GROUP BY MOVIES.MOVIE_NAME
--25. Indica el número de películas que hayan hecho los directores durante las décadas de los 60, 70 y 80 que contengan la palabra "The" en cualquier parte del título
SELECT DIRECTORS.DIRECTOR_NAME AS DIRECTOR, COUNT(MOVIES.MOVIE_ID) AS PELICULAS
FROM DIRECTORS
JOIN MOVIES ON DIRECTORS.DIRECTOR_ID = MOVIES.DIRECTOR_ID
WHERE YEAR(MOVIES.MOVIE_LAUNCH_DATE) BETWEEN 1960 AND 1989
  AND MOVIES.MOVIE_NAME LIKE '%The%'
GROUP BY DIRECTORS.DIRECTOR_NAME


--26. Lista nombre, nacionalidad y director de todas las películas
SELECT MOVIES.MOVIE_NAME AS PELICULA, NATIONALITIES.NATIONALITY_NAME AS PAIS, DIRECTORS.DIRECTOR_NAME AS DIRECTOR
FROM MOVIES
JOIN NATIONALITIES ON MOVIES.NATIONALITY_ID = NATIONALITIES.NATIONALITY_ID
JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID

--27. Muestra las películas con los actores que han participado en cada una de ellas
SELECT MOVIES.MOVIE_NAME AS PELICULA, GROUP_CONCAT(ACTORS.ACTOR_NAME SEPARATOR ', ') AS ACTOR
FROM MOVIES
JOIN MOVIES_ACTORS ON MOVIES.MOVIE_ID = MOVIES_ACTORS.MOVIE_ID
JOIN ACTORS ON MOVIES_ACTORS.ACTOR_ID = ACTORS.ACTOR_ID
GROUP BY MOVIES.MOVIE_NAME;

--28. Indica cual es el nombre del director del que más películas se han alquilado
SELECT DIRECTORS.DIRECTOR_NAME AS DIRECTOR, COUNT(MEMBERS_MOVIE_RENTAL.MOVIE_ID) AS ALQUILERES
FROM DIRECTORS
JOIN MOVIES ON DIRECTORS.DIRECTOR_ID = MOVIES.DIRECTOR_ID
JOIN MEMBERS_MOVIE_RENTAL ON MOVIES.MOVIE_ID = MEMBERS_MOVIE_RENTAL.MOVIE_ID
GROUP BY DIRECTORS.DIRECTOR_NAME
ORDER BY ALQUILERES DESC
LIMIT 1

--29. Indica cuantos premios han ganado cada uno de los estudios con las películas que han creado
SELECT STUDIOS.STUDIO_NAME AS ESTUDIO, COUNT(AWARDS.AWARD_ID) AS PREMIOS
FROM STUDIOS
JOIN MOVIES ON STUDIOS.STUDIO_ID = MOVIES.STUDIO_ID
JOIN AWARDS ON MOVIES.MOVIE_ID = AWARDS.MOVIE_ID
GROUP BY STUDIOS.STUDIO_NAME

--30. Indica el número de premios a los que estuvo nominado un actor, pero que no ha conseguido (Si una película está nominada a un premio, su actor también lo está)
SELECT ACTORS.ACTOR_NAME, COUNT(AWARDS.AWARD_ID) AS NUMERO_NOMINACIONES
FROM ACTORS
JOIN MOVIES_ACTORS ON ACTORS.ACTOR_ID = MOVIES_ACTORS.ACTOR_ID
JOIN MOVIES ON MOVIES_ACTORS.MOVIE_ID = MOVIES.MOVIE_ID
JOIN AWARDS ON MOVIES.MOVIE_ID = AWARDS.MOVIE_ID
WHERE AWARDS.AWARD_NOMINATION  >=1 AND AWARDS.AWARD_ALMOST_WIN >=1 AND  AWARDS.AWARD_WIN =0
GROUP BY ACTORS.ACTOR_NAME

--31. Indica cuantos actores y directores hicieron películas para los estudios no activos
SELECT COUNT(DISTINCT ACTORS.ACTOR_ID) AS ACTORES, COUNT(DISTINCT DIRECTORS.DIRECTOR_ID) AS DIRECTORES
FROM MOVIES
JOIN STUDIOS ON MOVIES.STUDIO_ID = STUDIOS.STUDIO_ID
LEFT JOIN MOVIES_ACTORS ON MOVIES.MOVIE_ID = MOVIES_ACTORS.MOVIE_ID
LEFT JOIN ACTORS ON MOVIES_ACTORS.ACTOR_ID = ACTORS.ACTOR_ID
LEFT JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID
WHERE STUDIOS.STUDIO_ACTIVE = 0

--33. Comprueba si hay errores en la BD entre las películas y directores (un director fallecido en el 76 no puede dirigir una película en el 88)
SELECT DIRECTORS.DIRECTOR_NAME AS DIRECTOR,DIRECTORS.DIRECTOR_DEAD_DATE AS FECHA_MUERTE, MOVIES.MOVIE_LAUNCH_DATE AS FECHA_PELICULA ,MOVIES.MOVIE_NAME AS PELICULA
FROM MOVIES
JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID
WHERE YEAR(DIRECTORS.DIRECTOR_DEAD_DATE) < YEAR(MOVIES.MOVIE_LAUNCH_DATE)

--34. Utilizando la información de la sentencia anterior, modifica la fecha de defunción a un año más tarde del estreno de la película (mediante sentencia SQL)
UPDATE DIRECTORS
SET DIRECTOR_DEAD_DATE = DATEADD(YEAR, 1, (SELECT MOVIE_LAUNCH_DATE 
                                             FROM MOVIES 
                                             WHERE MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID 
                                             AND YEAR(DIRECTORS.DIRECTOR_DEAD_DATE) < YEAR(MOVIES.MOVIE_LAUNCH_DATE)
                                             LIMIT 1))
WHERE DIRECTOR_ID IN (SELECT DISTINCT DIRECTORS.DIRECTOR_ID 
                      FROM MOVIES 
                      JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID
                      WHERE YEAR(DIRECTORS.DIRECTOR_DEAD_DATE) < YEAR(MOVIES.MOVIE_LAUNCH_DATE));


--35. Indica cuál es el género favorito de cada uno de los directores cuando dirigen una película ***(Ayuda del señor chatgpt)**** 
WITH rep AS (
    SELECT 
        DIRECTORS.DIRECTOR_ID,
        DIRECTORS.DIRECTOR_NAME, 
        GENRES.GENRE_NAME, 
        COUNT(MOVIES.MOVIE_ID) AS NUMERO_PELICULAS
    FROM DIRECTORS
    JOIN MOVIES ON DIRECTORS.DIRECTOR_ID = MOVIES.DIRECTOR_ID
    JOIN GENRES ON MOVIES.GENRE_ID = GENRES.GENRE_ID
    GROUP BY DIRECTORS.DIRECTOR_ID, DIRECTORS.DIRECTOR_NAME, GENRES.GENRE_NAME
)
SELECT rep.DIRECTOR_NAME, rep.GENRE_NAME, rep.NUMERO_PELICULAS
FROM rep 
JOIN (
    -- Subconsulta para encontrar el número máximo de películas por director
    SELECT 
        DIRECTOR_ID, 
        MAX(NUMERO_PELICULAS) AS MAX_PELICULAS
    FROM rep
    GROUP BY DIRECTOR_ID
) AS MaxGenero
ON rep.DIRECTOR_ID = MaxGenero.DIRECTOR_ID 
AND rep.NUMERO_PELICULAS = MaxGenero.MAX_PELICULAS
ORDER BY rep.NUMERO_PELICULAS DESC


--36. Indica cuál es la nacionalidad favorita de cada uno de los estudios en la producción de las películas ***(Ayuda del señor chatgpt)**** 

WITH Repetir AS (
    SELECT 
        STUDIOS.STUDIO_ID,
        STUDIOS.STUDIO_NAME, 
        NATIONALITIES.NATIONALITY_NAME, 
        COUNT(MOVIES.MOVIE_ID) AS NUMERO_PELICULAS
    FROM STUDIOS
    JOIN MOVIES ON STUDIOS.STUDIO_ID = MOVIES.STUDIO_ID
    JOIN NATIONALITIES ON MOVIES.NATIONALITY_ID = NATIONALITIES.NATIONALITY_ID
    GROUP BY STUDIOS.STUDIO_ID, STUDIOS.STUDIO_NAME, NATIONALITIES.NATIONALITY_NAME
)
SELECT Repetir.STUDIO_NAME, Repetir.NATIONALITY_NAME, Repetir.NUMERO_PELICULAS
FROM Repetir 
JOIN (
    -- Subconsulta para encontrar el máximo número de películas por estudio
    SELECT 
        STUDIO_ID, 
        MAX(NUMERO_PELICULAS) AS MAX_PELICULAS
    FROM Repetir
    GROUP BY STUDIO_ID
) AS MAX_COUNTS
ON Repetir.STUDIO_ID = MAX_COUNTS.STUDIO_ID 
AND Repetir.NUMERO_PELICULAS = MAX_COUNTS.MAX_PELICULAS
ORDER BY Repetir.NUMERO_PELICULAS DESC

--37. Indica cuál fue la primera película que alquilaron los miembros del videoclub cuyos teléfonos tengan como último dígito el ID de alguna nacionalidad  ***(Ayuda del señor chatgpt)**** 
SELECT M.MEMBER_NAME, MOVIE.MOVIE_NAME, R.MEMBER_RENTAL_DATE AS ALQUILER
FROM MEMBERS M
JOIN MEMBERS_MOVIE_RENTAL R ON M.MEMBER_ID = R.MEMBER_ID
JOIN MOVIES MOVIE ON R.MOVIE_ID = MOVIE.MOVIE_ID
JOIN NATIONALITIES N ON RIGHT(M.MEMBER_PHONE, 1) = N.NATIONALITY_ID
WHERE R.MEMBER_RENTAL_DATE = (
    SELECT MIN(MMR.MEMBER_RENTAL_DATE)
    FROM MEMBERS_MOVIE_RENTAL MMR
    WHERE MMR.MEMBER_ID = M.MEMBER_ID
)
ORDER BY M.MEMBER_NAME;

